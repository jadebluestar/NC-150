class Solution:
    def lastStoneWeight(self, stones: List[int]) -> int: 
        stones = [-s for s in stones] //negate to make the min.heap into a max.heap
        heapq.heapify(stones)

        while len(stones) > 1:
            first = heapq.heappop(stones)
            second = heapq.heappop(stones)
            if second > first:
                heapq.heappush(stones, first - second)

        stones.append(0)
        return abs(stones[0])

Original largest: 8

Negated version: -8 → the smallest in the min heap.

So, the min heap naturally pops -8 first → which means you’ve extracted the original largest stone!
